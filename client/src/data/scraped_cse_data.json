{
  "date": "2023-01-25",
  "courses": [
    {
      "id": "CSE 3",
      "name": " Personal Computer Concepts: Software and Hardware",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-3",
      "credits": "5",
      "description": "Provides an introduction to computers. Personal computing is emphasized, and students are introduced to word processing, spreadsheets, database management, graphics, and programming. Covers fundamentals of computing and current and future uses of computer technology, PC hardware, Windows operating system, applications software, networking and the Internet, and developments in the computer industry.  Designed for students with little or no experience using computers. Students cannot receive credit for this course and Computer Science 2. (Formerly Computer Engineering 3.)",
      "instructor": ["Gerald Moulds"],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 5J",
      "name": " Introduction to Programming in Java",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-5J",
      "credits": "5",
      "description": "Introduces programming in Java for students who have no prior programming experience. Students learn programming and documentation skills, as well as algorithmic problem-solving, and programming methodologies. Introduces computers, compilers, and editors. Students write small to medium-sized programs. This course and CSE 5C and CSE 5P cover similar concepts, but use different programming languages. Because <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-5J'>CSE 5J</a> followed by&nbsp;CSE 11 is a two-quarter alternative to the accelerated course CSE 12A and CSE 12L, engineering majors and students planning on continuing the programming sequence are encouraged to take <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-5J'>CSE 5J</a> rather than CSE 5C or CSE 5P. Students may not receive credit for <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-5J'>CSE 5J</a> taken concurrently or subsequently to CSE&nbsp;12A, CSE 12B, or Computer Engineering 13. (Formerly CMPS 5J.)",
      "instructor": [],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "MF",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 10",
      "name": " Introduction to Computer Science",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-10",
      "credits": "5",
      "description": "An overview of the theory, foundations, and practice of computer science with emphasis on what computers can and cannot do, now and in the future. Topics include algorithms and data, correctness and efficiency of algorithms, hardware, programming languages, limitations of computation, applications, and social issues. No programming skills are required as a prerequisite. Major concepts and open problems in computer science are presented without reliance on sophisticated mathematical tools. Students cannot receive credit for this course after completing CSE 15. (Formerly CMPS 10.)",
      "instructor": [" The Staff", "Patrick Tantalo", "Marilyn Walker"],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 12",
      "name": " Computer Systems and Assembly Language and Lab",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-12",
      "credits": "7",
      "description": "<p>Introduction to computer systems and assembly language and how computers compute in hardware and software. Topics include digital logic, number systems, data structures, compiling/assembly process, basics of the system software, and computer architecture. Course is 7 credits with integrated laboratories illustrating concepts covered in lecture. Note that <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-12'>CSE 12</a> assumes some programming experience. Students can show programming experience by taking one of the courses listed in the prerequisite list below or by taking the CSE python Test-out Exam: https://undergrad.soe.ucsc.edu/cse-20-testout-exam&nbsp;(Formerly <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-12'>CSE 12</a> and CSE 12L)</p>\n",
      "instructor": [
        " The Staff",
        "Tracy Larrabee",
        "Darrell Long",
        "Jose Renau Ardevol",
        "Matthew Guthaus",
        "Max Dunne",
        "Sagnik Nath"
      ],
      "requirements": {
        "prereq": ["CSE 5J", "CSE 20", "CSE 30", "BME 160"],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": true
      }
    },
    {
      "id": "CSE 13S",
      "name": " Computer Systems and C Programming",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-13S",
      "credits": "7",
      "description": "Focuses on C programming, command line, shell programming, editors, debuggers, source code control, and other tools. Examines basic computer systems, algorithm design, and development, data types, and program structures. Develops understanding of process model, compile-link-execute build cycle, language-machine interface, memory, and data representation. Students cannot receive credit for both <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-13S'>CSE 13S</a> and CSE 13E. Course is 7 credits with integrated laboratory.",
      "instructor": [
        "Darrell Long",
        "Peter Alvaro",
        "Faisal Nawab",
        "Davis Harrison",
        "Scott Brandt"
      ],
      "requirements": { "prereq": ["CSE 12", "BME 160"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 16",
      "name": " Applied Discrete Mathematics",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-16",
      "credits": "5",
      "description": "Introduction to applications of discrete mathematical systems. Topics include sets, functions, relations, graphs, predicate calculus, mathematical proof methods (induction, contraposition, contradiction), counting methods (permutations, combinations), and recurrences. Examples are drawn from computer science and computer engineering. Knowledge of computer programming is useful before taking this course. Students who do not have prior programming experience are strongly recommended to take <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-20'>CSE 20</a> or <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-30'>CSE 30</a> before taking this course.\n",
      "instructor": [
        "Tracy Larrabee",
        "Martine Schlag",
        "Owen Arden",
        "Chen Qian",
        "Alvaro Cardenas",
        "Allen Van Gelder",
        "John Musacchio",
        "The Staff "
      ],
      "requirements": {
        "prereq": ["MATH 19A", "MATH 19B", "MATH 11B", "AM 11B"],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 20",
      "name": " Beginning Programming in Python",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-20",
      "credits": "5",
      "description": "Provides students with Python programming skills and the ability to design programs and read Python code. Topics include data types, control flow, methods and advanced functions, built-in data structures, and introduction to OOP. No prior programming experience is required. Students may not receive credit for <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-20'>CSE 20</a> after receiving credit for <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-30'>CSE 30</a>. Students with prior programming experience (especially in Python) are encouraged to take CSE Testout Exam to be evaluated for their readiness to take <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-30'>CSE 30</a> directly: https://undergrad.soe.ucsc.edu/cse-20-testout-exam.",
      "instructor": [
        "Cormac Flanagan",
        "Narges Norouzi",
        "Tracy Larrabee",
        "Larissa Munishkina",
        "Patrick Tantalo",
        "Benedict Paten",
        "Marilyn Walker",
        "The Staff "
      ],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 30",
      "name": " Programming Abstractions: Python",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-30",
      "credits": "7",
      "description": "<p>Introduction to software development in Python focusing on structuring software in terms of objects endowed with primitive operations. Introduces concepts and techniques via a sequence of concrete case studies. Coursework consists of programming assignments and a final examination. Note that <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-30'>CSE 30</a> assumes some Python experience, students trained in a different language should self-study Python to prepare for <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-30'>CSE 30</a>. See <a rel=\"noopener noreferrer\" href=\"https://undergrad.soe.ucsc.edu/cse-20-testout-exam\" target=\"_blank\">CSE Testout Exam</a> for resources and further information.</p>",
      "instructor": [
        "Luca De Alfaro",
        "Peter Alvaro",
        "Delbert Bailey",
        "Lindsey Kuper",
        "Alex Pang",
        "Larissa Munishikina",
        "The Staff "
      ],
      "requirements": {
        "prereq": [
          "CSE 20",
          "BME 160",
          "MATH 3",
          "MATH 11A",
          "MATH 19A",
          "AM 3",
          "AM 11A"
        ],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 40",
      "name": " Machine Learning Basics: Data Analysis and Empirical Methods",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-40",
      "credits": "5",
      "description": "Introduction to the basic mathematical concepts and programming abstractions required for modern machine learning, data science, and empirical science. The mathematical foundations include basic probability, linear algebra, and optimization. The programming abstractions include data manipulation and visualization. The principles of empirical analysis, evaluation, critique and reproducibility are emphasized. Mathematical and programming abstractions are grounded in empirical studies including data-driven evidential reasoning, predictive modeling, and causal analysis.\n",
      "instructor": ["Lise Getoor", "The Staff "],
      "requirements": {
        "prereq": ["MATH 19B", "MATH 20B", "CSE 30"],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": true,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 80A",
      "name": " Universal Access: Disability, Technology, and Society",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-80A",
      "credits": "5",
      "description": "Overview of human-centered technology and of its potential for increasing the quality of life and independence of disabled individuals. A substantial portion of the course is devoted to studying physical, psychological, and psychosocial aspects of disability. Topics include: diversity and integration, legislation, accessibility, and universal design. (Formerly Computer Engineering 80A.)",
      "instructor": ["Roberto Manduchi", "Sri Kurniawan"],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 80L",
      "name": " Social Data Analytics and Visualization",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-80L",
      "credits": "5",
      "description": "Course examines: social data analytics--veracity, consistency, uncertainty, volume; statistical computation--misuse, bias, dispersion, correlation, regressions, differential scales, normal distributions, factor and cluster analysis, extrapolation, inference, simple programming; visual representations--communication, critique and design of infographics; applications--environment, energy, economics, education, empowerment. (Formerly Computer Science 80L.)",
      "instructor": ["Suresh Lodha"],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 80N",
      "name": " Introduction to Networking and the Internet",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-80N",
      "credits": "5",
      "description": "Introduction to the evolution, technological basis, and services of the Internet, with descriptions of its underlying communications structure, routing algorithms, peer-to-peer hierarchy, reliability, and packet switching. Network security, mail, multimedia and data compression issues, HTML, and digital images. Students who have completed CSE&nbsp;150 cannot receive credit for this course. (Formerly Computer Engineering 80N.)",
      "instructor": [
        "Chris Parsa",
        "Tracy Larrabee",
        "Patrick Mantey",
        "Chen Qian"
      ],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 80S",
      "name": " Social Networks",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-80S",
      "credits": "5",
      "description": "Introduction to social networks and game theory. Topics include the structure of social networks; the world wide web; the flow of information and behavior through networks; and the principles behind modern web search and search-ad placement. (Formerly Computer Science 17.)",
      "instructor": ["Phokion Kolaitis", "Lise Getoor"],
      "requirements": {
        "prereq": ["MATH 3", "MATH 11A", "AM 3", "AM 6", "AM 11A"],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 94",
      "name": " Group Tutorial",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-94",
      "credits": "5",
      "description": "Provides a means for a small group of students to study a particular topic in consultation with a faculty sponsor. Students submit petition to sponsoring agency.",
      "instructor": [],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 94F",
      "name": " Group Tutorial",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-94F",
      "credits": "2",
      "description": "Provides a means for a small group  of students to study a particular topic in consultation with a faculty sponsor. Students submit petition to sponsoring agency.",
      "instructor": [],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 99",
      "name": " Tutorial",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-99",
      "credits": "5",
      "description": "Students submit petition to sponsoring agency.",
      "instructor": [],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 99F",
      "name": " Tutorial",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-99F",
      "credits": "2",
      "description": "Students submit petition to sponsoring agency.",
      "instructor": [],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 100",
      "name": " Logic Design",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-100",
      "credits": "5",
      "description": "Boolean algebra, logic minimization, finite-state machine design, sequential circuits, common logic elements, programmable logic devices, and an introduction to system level design. The electrical behavior of circuits including three state outputs, propagation delay, logic levels, and fanout.",
      "instructor": ["Scott Beamer", "Martine Schlag", "Sagnik Nath"],
      "requirements": { "prereq": ["CSE 12"], "coreq": ["CSE 100L"] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 100L",
      "name": " Logic Design Laboratory",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-100L",
      "credits": "2",
      "description": "Laboratory sequence illustrating topics covered in course 100. Two 2-hour laboratory sessions per week. Weekly laboratory assignments which require the use of the oscilloscopes, TTL circuits, computer-aided design and simulation tools, and programmable logic.",
      "instructor": ["Scott Beamer", "Martine Schlag", "Sagnik Nath"],
      "requirements": { "prereq": ["CSE 12"], "coreq": ["CSE 100"] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 101",
      "name": " Introduction to Data Structures and Algorithms",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-101",
      "credits": "5",
      "description": "Introduction to abstract data types and basics of algorithms. Linked lists, stacks, queues, hash tables, trees, heaps, and graphs will be covered. Students will also be taught how to derive big-Oh analysis of simple algorithms. All assignments will be in C/C++. (Formerly Computer Science 101 Algorithms and Abstract Data Types.)",
      "instructor": [
        "Ioannis Demertzis",
        "Patrick Tantalo",
        "Manfred Warmuth",
        "Allen Van Gelder",
        "David Helmbold",
        "Seshadhri Comandur",
        "James Davis",
        "Alex Pang"
      ],
      "requirements": {
        "prereq": [
          "CSE 12",
          "BME 160",
          "ECE 13",
          "CSE 13S",
          "CSE 16",
          "CSE 30",
          "MATH 11B",
          "MATH 19B",
          "MATH 20B",
          "AM 11B"
        ],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 102",
      "name": " Introduction to Analysis of Algorithms",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-102",
      "credits": "5",
      "description": "Methods for the systematic construction and mathematical analysis of algorithms. Order notation, the RAM model of computation, lower bounds, and recurrence relations are covered. The algorithm design techniques include divide-and-conquer, branch and bound, and dynamic programming. Applications to combinatorial, graph, string, and geometric algorithms. (Formerly Computer  Science 102.)",
      "instructor": [
        " Kolla",
        "Manfred Warmuth",
        "Allen Van Gelder",
        "Suresh Lodha",
        "David Helmbold",
        "Daniel Fremont",
        "Abhradeep Guha Thakurta"
      ],
      "requirements": { "prereq": ["CSE 101"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 103",
      "name": " Computational Models",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-103",
      "credits": "5",
      "description": "Various representations for regular languages, context-free grammars, normal forms, simple parsing, pumping lemmas, Turing machines, the Church-Turing thesis, intractable problems, the P-NP question. (Formerly CMPS 130.)",
      "instructor": [
        "Delbert Bailey",
        "Patrick Tantalo",
        "Manfred Warmuth",
        "Allen Van Gelder",
        "Phokion Kolaitis",
        "David Helmbold",
        "Seshadhri Comandur"
      ],
      "requirements": { "prereq": ["CSE 101"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 104",
      "name": " Computability and Computational Complexity",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-104",
      "credits": "5",
      "description": "Turing machines, general phase-structure grammars, the Chomsky hierarchy, recursive functions, diagonalization, the Halting problem, computability and unsolvability, computational complexity, time and space bounds, NP-completeness with emphasis on reductions between problems from various areas. (Formerly CMPS 132.)",
      "instructor": [
        "Delbert Bailey",
        "Manfred Warmuth",
        "Allen Van Gelder",
        "Phokion Kolaitis",
        "David Helmbold"
      ],
      "requirements": { "prereq": ["CSE 103"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": true,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 106",
      "name": " Applied Graph Theory and Algorithms",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-106",
      "credits": "5",
      "description": "Basic concepts and algorithms are reviewed including trees, Eulerian and Hamiltonian graphs, and graph transversal. Algorithms are explored to solve problems in connectivity, routing, matching, and embedding of graphs. Graph theory and algorithms are developed around applications in computer engineering. (Formerly Computer Engineering 177.)",
      "instructor": ["Martine Schlag", "Patrick Tantalo"],
      "requirements": { "prereq": ["CSE 101"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 107",
      "name": " Probability and Statistics for Engineers",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-107",
      "credits": "5",
      "description": "Introduction to fundamental tools of stochastic analysis. Probability, conditional probability; Bayes Theorem; random variables and transforms; independence; Bernnoulli trials. Statistics, inference from limited data; outcomes of repeated experiments; applications to design; assessment of relative frequency and probability; law of large numbers; precision of measurements. Elements of stochastic processes, Poisson processes; Markov chains. Students cannot receive credit for this course and Applied Mathematics and Statistics 131. (Formerly Computer Engineering 107.)",
      "instructor": [
        "Jose Garcia-Luna-Aceves",
        "Mircea Teodorescu",
        "John Musacchio",
        "Chen Qian",
        "Patrick Tantalo"
      ],
      "requirements": {
        "prereq": ["CSE 16", "AM 30", "MATH 22", "MATH 23A"],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 108",
      "name": " Algorithmic Foundations of Cryptography",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-108",
      "credits": "5",
      "description": "Focuses on some of the foundational aspects of modern cryptography, namely, private and public key cryptography, digital signatures, pseudorandom generators and functions, message authentication codes, hash functions, and random oracles. Course also connects the formal concepts with some real-world applications, like RA, SSL, and bitcoin, exposing students to general concepts of probability theory, number theory, and rigorous proofs. (Formerly Computer Science 118.)",
      "instructor": ["Abhradeep Guha Thakurta", "Ioannis Demertzis"],
      "requirements": { "prereq": ["CSE 101"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 110A",
      "name": " Fundamentals of Compiler Design I",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-110A",
      "credits": "5",
      "description": "An introduction to the basic techniques used in compiler design. Topics include compiler structure, symbol tables, regular expressions and languages, finite automata, lexical analysis, context-free languages, LL(1), recursive descent, LALR(1), and LR(1) parsing; and attribute grammars as a model of syntax-directed translation. Students use compiler building tools to construct a working compiler. (Formerly Computer  Science 104A.)",
      "instructor": ["Wesley Mackey", "Owen Arden", "TylerSorensen Sorensen"],
      "requirements": { "prereq": ["CSE 12", "CSE 101"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 110B",
      "name": " Fundamentals of Compiler Design II",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-110B",
      "credits": "5",
      "description": "Advanced study of compiler implementation. Topics include compiler structure back end, run-time environments, storage management, garbage collection, register allocation, code generation, basic blocks, control flow, data flow, local and global optimization, interpretation, and machine-code generation. Students may not receive credit for this course and CSE&nbsp;211. Taught in conjunction with CSE&nbsp;211. (Formerly Computer Science 104B.)",
      "instructor": ["Wesley Mackey"],
      "requirements": { "prereq": ["CSE 110A"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 111",
      "name": " Advanced Programming",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-111",
      "credits": "5",
      "description": "An introduction to object-oriented techniques of software development including data abstraction, inheritance, polymorphism, and object-oriented design. Extensive practice using a computer to solve problems, including construction of graphical user interfaces and a multithreaded client/server applications.",
      "instructor": [" The Staff", "Wesley Mackey", "David Harrison"],
      "requirements": {
        "prereq": [
          "CSE 13S",
          "CMPM 35",
          "CMPM 35",
          "ECE 13",
          "CMPM 35",
          "CSE 101"
        ],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 112",
      "name": " Comparative Programming Languages",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-112",
      "credits": "5",
      "description": "Covers several programming languages and compares styles, philosophy, and design principles. Principles underlying declarative, functional, and object-oriented programming styles are studied. Students write programs emphasizing each of these techniques. (Formerly Computer Science 112.)",
      "instructor": [
        "W. Mackey",
        "D. Long",
        "C. Flanagan",
        "A. Van Gelder",
        "O. Arden",
        "D. Harrison"
      ],
      "requirements": { "prereq": ["CSE 101"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 113",
      "name": " Parallel and Concurrent Programming",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-113",
      "credits": "5",
      "description": "Introduction to parallel and concurrent programming. Topics include: types of parallel computers and programming platforms; design, implementation, and optimization of programs for parallel and multicore processors; basic and advanced programming techniques; performance analysis and load balancing; and selected parallel algorithms.",
      "instructor": ["Tyler Sorensen"],
      "requirements": {
        "prereq": ["CSE 12", "CSE 101", "CSE 120"],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": true,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 114A",
      "name": " Foundations of Programming Languages",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-114A",
      "credits": "5",
      "description": "Problem solving emphasizing recursion, data abstraction, and higher-order functions. Introduction to types and type checking, modular programming, and reasoning about program correctness. (Formerly CSE 116, Introduction to Functional Programming.)",
      "instructor": ["Owen Arden", "Lindsey Kuper", "Cormac Flanagan"],
      "requirements": { "prereq": ["CSE 101"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 114B",
      "name": " Functional Programming",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-114B",
      "credits": "5",
      "description": "An in-depth study of the functional style of programming and functional abstraction, including the study of applicative functors and monads, and monadic parsers. (Formerly CSE 114.)",
      "instructor": ["Cormac Flanagan"],
      "requirements": { "prereq": ["CSE 114A"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 115A",
      "name": " Introduction to Software Engineering",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-115A",
      "credits": "5",
      "description": "Emphasizes the characteristics of well-engineered software systems. Topics include requirements analysis and specification, design, programming, verification and validation, maintenance, and project management. Practical and research methods are studied. Imparts an understanding of the steps used to effectively develop computer software. (Formerly Computer Science 115.)",
      "instructor": [
        " The Staff",
        "Jim Whitehead",
        "Cormac Flanagan",
        "Linda Werner",
        "Richard Jullig",
        "Narges Norouzi"
      ],
      "requirements": { "prereq": ["CSE 101", "CSE 130"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 115B",
      "name": " Software Design Project",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-115B",
      "credits": "5",
      "description": "Students in teams specify, design, construct, test, and document a complete software system in a specialized application domain. Class time is spent in technical discussions and ongoing design reviews. A formal presentation and demonstration of each project is required. An organizational meeting will be held during the preceding quarter. Projects may be drawn from industry and campus research groups. (Formerly Computer Science 116.)",
      "instructor": [
        "Jim Whitehead",
        "Luca De Alfaro",
        "Linda Werner",
        "Richard Jullig"
      ],
      "requirements": { "prereq": ["CSE 115A"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": true,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 115C",
      "name": " Software Design Project II",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-115C",
      "credits": "5",
      "description": "Continuation of CSE 116. Students work in teams to develop, test, document, and deploy a substantial software project. Teams give a formal presentation and demonstration of each project. (Formerly Computer Science 117.)",
      "instructor": [
        " The Staff",
        "Jim Whitehead",
        "Luca De Alfaro",
        "Linda Werner",
        "Richard Jullig"
      ],
      "requirements": { "prereq": ["CSE 115B"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 115D",
      "name": " Software Design Project - Accelerated",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-115D",
      "credits": "5",
      "description": "Accelerated version of <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-115B'>CSE 115B</a> and <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-115C'>CSE 115C</a>. Students work in teams to develop, test, document and deploy a substantial software project. Each team gives a formal presentation and demonstration of their project. Students cannot receive credit for both <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-115D'>CSE 115D</a> and any part of the 115B-115C sequence.",
      "instructor": ["Richard Jullig"],
      "requirements": { "prereq": ["CSE 115A"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 117",
      "name": " Open Source Programming",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-117",
      "credits": "5",
      "description": "Teaches the principles of open source software development. By participating in diverse projects, students experience the process of developing software in a distributed, community-centric environment. Students learn about the tools, processes, and soft skills that are essential in this context.\n",
      "instructor": [" The Staff", "Carl Maltzahn"],
      "requirements": {
        "prereq": ["CSE 101", "CSE 102", "CSE 111", "CSE 115A"],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 118",
      "name": " Mobile Applications",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-118",
      "credits": "5",
      "description": "Introduces programming and application development for mobile devices. Covers the Android SDK and main programming platforms available on mobile devices, methodologies for developing native applications. Students build applications and learn about different Android application components such as Activities, Services, Broadcast Receivers, and Content Providers through course assignments. Course based on emulators and SDK tools, so ownership of a cell phone/tablet is not required for the course. (Formerly CMPS 121.)\n",
      "instructor": ["David Harrison", "Luca De Alfaro", "Narges Norouzi"],
      "requirements": { "prereq": ["CSE 101"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 119",
      "name": " Software for Society",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-119",
      "credits": "5",
      "description": "Provides experience with applying computing to social issues. Case studies on multiple issues. For example: privacy, copyright, voting, education, poverty, energy, activism. Team project in which students develop software to address a pre-identified need of a global or local non-profit. (Formerly Computer Science 119.)",
      "instructor": ["Suresh Lodha", "James Davis"],
      "requirements": { "prereq": ["CSE 101"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 120",
      "name": " Computer Architecture",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-120",
      "credits": "5",
      "description": "Introduction to computer architecture including examples of current approaches and the effect of technology and software. Computer performance evaluation, basic combinatorial and sequential digital components, different instruction set architectures with a focus on the MIPS ISA and RISC paradigm. Evolution of CPU microarchitecture from single-cycle to multi-cycle pipelines, with overview of super-scalar, multiple-issue and VLIW. Memory system, cache, virtual memory and relationship between memory and performance. Evolution of PC system architecture. May include advanced topics, such as parallel processing, MIMD, and SIMD.",
      "instructor": [
        "Scott Beamer",
        "Ethan Miller",
        "Jose Renau Ardevol",
        "Heiner Litz",
        "Sagnik Nath"
      ],
      "requirements": {
        "prereq": ["CSE 12", "CSE 13S", "ECE 13", "CSE 16"],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 121",
      "name": " Embedded System Design",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-121",
      "credits": "7",
      "description": "The design and use of microprocessor-based embedded systems. Covers microprocessor and microcontroller architecture, programming techniques, bus and memory organization, DMA, timing issues, interrupts, peripheral devices, serial and parallel communication, and interfacing to analog and digital systems. (Formerly Microprocessor System Design, and formerly offered as two courses, CMPE 121 and CMPE 121L.)",
      "instructor": [
        "Anujan Varma",
        "David Harrison",
        "Heiner Litz",
        "Jose Renau"
      ],
      "requirements": {
        "prereq": [
          "CSE 12",
          "CSE 100",
          "CSE 100L",
          "CSE 13S",
          "ECE 13",
          "ECE 101",
          "ECE 101L",
          "PHYS 5C",
          "PHYS 5N"
        ],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": false,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 122",
      "name": " Introduction to VLSI Digital System Design",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-122",
      "credits": "5",
      "description": "Introduces very large scale integrated (VLSI) custom integrated circuits. Topics include: semiconductor manufacturing, logic families, field-effect transistors (FETs), interconnect models, simulation, and circuits. Introduces the design flow from logic design to layout with a focus on high performance and low power. Students cannot receive credit for this course and <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Graduate/CSE-222A'>CSE 222A</a>. (Formerly Computer Engineering 122.)",
      "instructor": ["Matthew Guthaus"],
      "requirements": {
        "prereq": ["CSE 100", "CSE 100L", "ECE 101", "ECE 101L"],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 123A",
      "name": " Engineering Design Project I",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-123A",
      "credits": "5",
      "description": "First of a two-course sequence that is the culmination of the engineering program. Students apply knowledge and skills gained in elective track to complete a major design project. Students complete research, specification, planning, and procurement for a substantial project. Includes technical discussions, design reviews, and formal presentations; engineering design cycle, engineering teams, and professional practices. Formal technical specification of the approved project is presented to faculty.",
      "instructor": [" The Staff", "Anujan Varma", "David Harrison"],
      "requirements": { "prereq": ["CSE 121"], "coreq": ["CSE 185E"] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": true,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 123B",
      "name": " Engineering Design Project II",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-123B",
      "credits": "7",
      "description": "Second of two-course sequence in engineering system design. Students fully implement and test system designed and specified in <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-123A'>CSE 123A</a>. Formal written report, oral presentation, and demonstration of successful project to review panel of engineering faculty required.",
      "instructor": [" The Staff", "Anujan Varma", "David Harrison"],
      "requirements": { "prereq": ["CSE 123A", "CSE 185E"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 125",
      "name": " Logic Design with Verilog",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-125",
      "credits": "7",
      "description": "Verilog digital logic design with emphasis on ASIC and FPGA design. Students design and verify large-scale systems. Assignments and project use the Verilog Hardware Description Language with emphasis on verification and high-frequency ASIC/FPGA targets. May be taught in conjunction with <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Graduate/CSE-225'>CSE 225</a>. Students cannot receive credit for both courses.\n",
      "instructor": ["Jose Renau Ardevol", "Matthew Guthaus", "Heiner Litz"],
      "requirements": {
        "prereq": ["CSE 100", "CSE 100L", "CSE 120"],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": true,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 129A",
      "name": " Capstone Project I",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-129A",
      "credits": "2",
      "description": "First of a three-course sequence in which students apply knowledge and skills gained in elective track to complete a major design project. In this first course, students complete the specification and planning for a substantial project. Topics covered: engineering design cycle, engineering teams, and professional practices. (Formerly Computer Engineering 129A.)",
      "instructor": ["Patrick Mantey", "Gabriel Elkaim"],
      "requirements": { "prereq": [], "coreq": ["CSE 121"] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 129B",
      "name": " Capstone Project II",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-129B",
      "credits": "5",
      "description": "Second of a three-course sequence in which students apply knowledge and skills gained in elective track to complete a major design project. In this second course, students complete the research and procurement for a substantial project and a preliminary implementation. Prerequisite(s): <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-121'>CSE 121</a>, CSE 121L, and <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-129A'>CSE 129A</a>. Previous or concurrent enrollment in CSE 185. Enrollment by permission of instructor.",
      "instructor": ["Patrick Mantey", "Gabriel Elkaim"],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 129C",
      "name": " Capstone Project III",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-129C",
      "credits": "5",
      "description": "Third of a three-course sequence in which students apply knowledge and skills gained in elective track to complete a major design project. In this third course, students work in teams to complete the project specified and advanced in the first two courses. A formal written report, oral presentation, and demonstration of the successful project to a review panel of engineering faculty is required. Prerequisite(s): <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-129B'>CSE 129B</a> and CSE 185. Enrollment by permission of instructor.",
      "instructor": ["Patrick Mantey", "Gabriel Elkaim</p>\r\n\t</div"],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 130",
      "name": " Principles of Computer Systems Design",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-130",
      "credits": "5",
      "description": "Covers the principles governing computer-systems design and complexity; familiarity with memory, storage, and networking; concurrency and synchronization; layering (abstraction and modularity); naming; client-server and virtualized system models; and performance. Requires significant programming projects demonstrating mastery of these concepts.",
      "instructor": [
        "Ethan Miller",
        "Gabriel Elkaim",
        "Faisal Nawab",
        "Peter Alvaro",
        "David Harrison",
        "Andrew Quinn",
        "Katia Obraczka"
      ],
      "requirements": { "prereq": ["CSE 12", "CSE 101"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 132",
      "name": " Computer Security",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-132",
      "credits": "5",
      "description": "Introduction to computer security (including selected topics in network security). Access control. Security in programming languages. Basic cryptography. Security protocols. (Formerly CMPS 122.)",
      "instructor": ["Ethan Miller", "Owen Arden", "Alvaro Cardenas"],
      "requirements": { "prereq": ["CSE 130"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 134",
      "name": " Embedded Operating Systems",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-134",
      "credits": "5",
      "description": "Detailed exploration of the internal design of an embedded operating systems kernel. Covers kernel structure and organization, device drivers, I/O systems, file systems, memory management, and security. Students complete significant programming projects that extend or modify existing operating systems. (Formerly Computer Engineering 114.)",
      "instructor": ["Ethan Miller", "Darrell Long", "Andrew Quinn"],
      "requirements": { "prereq": ["CSE 120", "CSE 130"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 138",
      "name": " Distributed Systems",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-138",
      "credits": "5",
      "description": "Covers topics in distributed computing including communication, naming, synchronization, consistency and replication, fault tolerance, and security. Examples drawn from peer-to-peer systems, online gaming, the World Wide Web; other systems also used to illustrate approaches to these topics. Students implement simple distributed systems over the course of the quarter. (Formerly CMPS 128, Distributed Systems: File Sharing, Online Gaming, and More.)",
      "instructor": ["L. Kuper", "E. Miller", "D. Long", "P. Alvaro"],
      "requirements": { "prereq": ["CSE 130"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": true,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 140",
      "name": " Artificial Intelligence",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-140",
      "credits": "5",
      "description": "Introduction to the contemporary concepts and techniques of artificial intelligence, including any or all of: machine perception and inference, machine learning, optimization problems, computational methods and models of search, game playing and theorem proving. Emphasis may be on any formal method of perceiving, learning, reasoning, and problem solving which proves to be effective. This includes both symbolic and neural network approaches to artificial intelligence. Issues discussed include symbolic versus nonsymbolic methods, local versus global methods, hierarchical organization and control, and brain modeling versus engineering approaches. Lisp or Prolog may be introduced. Involves one major project or regular programming assignments. (Formerly CMPS 140.)",
      "instructor": [
        "Narges Norouzi",
        "Marilyn Walker",
        "Lise Getoor",
        "Yang Liu",
        "Leilani Gilpin"
      ],
      "requirements": { "prereq": ["CSE 101"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 142",
      "name": " Machine Learning",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-142",
      "credits": "5",
      "description": "Introduction to machine learning algorithms and their applications. Topics include classification learning, density estimation and Bayesian learning regression, and online learning. Provides introduction to standard learning methods such as neural networks, decision trees, boosting, and nearest neighbor techniques. (Formerly CMPS 142.)",
      "instructor": [
        "Manfred Warmuth",
        "David Helmbold",
        "Snigdha Chaturvedi",
        "Yang Liu",
        "Xin \"Eric\" Wang",
        "Evangelos Chatzisfratis"
      ],
      "requirements": {
        "prereq": [
          "CSE 101",
          "AM 30",
          "MATH 22",
          "MATH 23A",
          "STAT 131",
          "CSE 107"
        ],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 143",
      "name": " Introduction to Natural Language Processing",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-143",
      "credits": "5",
      "description": "Introduces the theory and practice of natural language processing (NLP)--the creation of computer programs that can understand, generate, and learn natural language. Introduces the three major subfields of NLP: syntax (the structure of a sentence); semantics (the  explicit meaning of a single sentence); and pragmatics (the implicit meaning of a sentence when it is used in a specific discourse). Projects focus on the techniques useful for a particular application area, alternating in different years. Project application areas include information extraction, narrative understanding, sentiment analysis, dialogue systems, and question answering. (Formerly CMPS 143.)",
      "instructor": [" The Staff", "Marilyn Walker", "Jeff Flanagan"],
      "requirements": {
        "prereq": ["CSE 101", "CSE 107", "STAT 131", "CSE 30"],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 144",
      "name": " Applied Machine Learning",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-144",
      "credits": "5",
      "description": "Provides a practical and project-oriented introduction to machine learning, with an emphasis on neural networks and deep learning. Starts with a discussion of the foundational pieces of statistical inference, then introduces the basic elements of machine learning: loss functions and gradient descent. Using these, presents logistic regression, or one-layer networks, and then moves on to more complex models: deep neural networks, convolutional networks for image recognition, and recurrent networks and LSTM for temporal and sequence data. Also covers the basics of dataset preparation and visualization and the performance characterization of the models created. Includes weekly homework and a final project that can be done in groups. (Formerly CMPS 144.)",
      "instructor": [
        "Luca De Alfaro",
        "Narges Norouzi",
        "Benedict Paten",
        "Josh Stuart",
        "David Haussler",
        "Cihang Xie",
        "Yuyin Zhou"
      ],
      "requirements": { "prereq": ["CSE 101"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 145",
      "name": " Introduction to Data Mining",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-145",
      "credits": "5",
      "description": "Covers the techniques, algorithms, and applications of data mining, including data preprocessing, data exploration, classification, clustering, mining text, and sequential and social data. (Formerly TIM 145.)",
      "instructor": ["Yi Zhang"],
      "requirements": {
        "prereq": [
          "CSE 30",
          "CSE 13S",
          "AM 30",
          "MATH 22",
          "MATH 23A",
          "STAT 5",
          "CSE 107",
          "STAT 131",
          "AM 10",
          "MATH 21",
          "CSE 16",
          "ECON 113"
        ],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 146",
      "name": " Ethics and Algorithms",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-146",
      "credits": "5",
      "description": "Provides an introduction to data-driven and algorithmic decision making, and ethical frameworks for evaluating automated systems. Emphasis on algorithmic literacy, critical analysis, and fundamental limitations of automated decision making. Covers concepts including predictive and causal modeling. Discusses bias, fairness, interpretability, privacy, and accountability. Finally, discusses notions of autonomy and algorithmic auditing.\n",
      "instructor": ["Lise Getoor"],
      "requirements": {
        "prereq": ["CSE 101", "CSE 107", "STAT 131", "CSE 142", "CSE 140"],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 150",
      "name": " Introduction to Computer Networks",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-150",
      "credits": "7",
      "description": "Addresses issues arising in organizing communications among autonomous computers. Network models and conceptual layers; Internet-working; characteristics of transmission media; switching techniques (packet switching, circuit switching, cell switching); medium access control (MAC) protocols and local area networks; error-control strategies and link-level protocols; routing algorithms for bridges and routers; congestion control mechanisms; transport protocols; application of concepts to practical wireless and wireline networks and standard protocol architectures. Lab component provides students with hands-on experience in computer networks. Students who have completed <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Lower-Division/CSE-80N'>CSE 80N</a> can take this course for credit.",
      "instructor": ["Chen Quian", "Katia Obraczka", "Chris The Staff"],
      "requirements": { "prereq": ["CSE 16", "CSE 12", "CSE 30"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 151",
      "name": " Advanced Computer Networks",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-151",
      "credits": "5",
      "description": "Provides an in-depth coverage of fundamental topics introduced in course 150 including routing, transport, and internetworking. Also introduces advanced concepts not covered in <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-150'>CSE 150</a> including wireless, application-layer services, security, etc. (Formerly  Computer Engineering 151.)",
      "instructor": [" The Staff", "Bradley Smith", "Jose Garcia-Luna-Aceves"],
      "requirements": { "prereq": ["CSE 150", "CSE 151L"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 151L",
      "name": " Advanced Computer Networks Laboratory",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-151L",
      "credits": "2",
      "description": "Laboratory illustrating the concepts covered in <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-151'>CSE 151</a>: provides students with hands-on experience in computer networks. (Formerly Computer Engineering 151L.)",
      "instructor": [" The Staff", "Bradley Smith", "Jose Garcia-Luna-Aceves"],
      "requirements": { "prereq": ["CSE 150", "CSE 151"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 152",
      "name": " Principles of Computer Communication",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-152",
      "credits": "5",
      "description": "Course focuses on the design and analysis of protocols for computer communication. Topics include: the safety, liveliness, and performance of communication protocols for medium access control (MAC); link control; routing and switching; multicasting; and end-to-end transport. Students cannot receive credit for this course and <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Graduate/CSE-250B'>CSE 250B</a>.",
      "instructor": ["Jose Garcia-Luna-Aceves"],
      "requirements": { "prereq": ["CSE 107", "CSE 150"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 156",
      "name": " Network Programming",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-156",
      "credits": "5",
      "description": "Methods and tools used for network programming. Topics include: operating system (OS) support for network protocols; inter-process communication (IPC) facilities, such as pipes, sockets, and remote procedure call (RPC); design of client and server sides of network applications; network security; and programming projects. (Formerly Computer Engineering 156.)",
      "instructor": [" The Staff", "Mehrdad Parsa", "Anujan Varma"],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": true,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 156L",
      "name": " Network Programming Laboratory",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-156L",
      "credits": "2",
      "description": "Laboratory sequence illustrating concepts taught in <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-156'>CSE 156</a>. Students learn use of network programming tools and methods via programming exercises. (Formerly Computer Engineering 156L.)",
      "instructor": [" The Staff", "Mehrdad Parsa", "Anujan Varma"],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": true,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 157",
      "name": " Internet of Things",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-157",
      "credits": "7",
      "description": "Introduces the key concepts and techniques in the design of Internet of Things (IoT). Topics include dominant architectures and protocols for IoT, wireless infrastructure for IoT, hardware and software development methodologies, embedded software design for IoT, cloud software for IoT, and network and system security. Students work in teams on a project to design, prototype, and test a complete IoT system.",
      "instructor": ["Anujan Varma", "Katia Obraczka"],
      "requirements": { "prereq": ["CSE 121", "CSE 150"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": true,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 160",
      "name": " Introduction to Computer Graphics",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-160",
      "credits": "7",
      "description": "Introduces techniques of modeling, transformation, and rendering for computer-generated imagery. Topics: 2D/3D primitives, projections, matrix composition, and shading algorithms. Programming assignments and major project required. Students cannot receive credit for both this course and <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Graduate/CSE-260'>CSE 260</a> in quarters when they are offered concurrently. Mastery of materials in the prerequisite courses will be verified with a quiz or assignment during the first two weeks of the course. Lab component will help with gaining additional competence with a number of important software development tools, graphics libraries, and graphical user interfaces. Topics include OpenGL, WebGL, rubberbanding, picking, sliders, buttons, dialog, event handling, double buffering, lighting, shading, materials, and textures. The topic list may be updated to reflect technological changes. (Formerly Computer Science 160.)\n",
      "instructor": ["Alex Pang", "James Davis"],
      "requirements": {
        "prereq": ["CSE 101", "MATH 21", "AM 10"],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": false,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 161",
      "name": " Introduction to Data Visualization",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-161",
      "credits": "5",
      "description": "Concepts and methods for data analysis, information and scientific visualization, and effective communication of technical data. Topics include: mathematical foundations; scalar, vector, and tensor field visualization; multivariate visualization; and tree and graph visualizations. Applications are drawn from social-network analysis; environmental and space science; and medical imaging. Evaluation based on examinations, programming exercises, and a project. (Formerly CMPS 161.)",
      "instructor": ["Alex Pang", "Suresh Lodha"],
      "requirements": { "prereq": ["CSE 160", "CSE 161L"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 161L",
      "name": " Data Visualization Laboratory",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-161L",
      "credits": "2",
      "description": "Complements <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-161'>CSE 161</a>. Students gain additional competence with a number of important software development tools and techniques. Included are Paraview,  Visualization Toolkit (VTK), and Insight Toolkit (ITK). Students get hands-on experience with designing transfer functions, isosurfacing, direct volume rendering, vector-field visualization techniques, as well as methods for dealing with non-spatial data. (Formerly CMPS 161L.)",
      "instructor": ["Alex Pang", "Suresh Lodha"],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 162",
      "name": " Advanced Computer Graphics and Animation",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-162",
      "credits": "5",
      "description": "Covers concepts and methods for modeling and rendering static and dynamic scenes Topics include: mathematical foundations (e.g., splines and numerical integration; global illumination models; texture mapping; morphing; physically based animation; behavioral animations; and procedural animations. Evaluation based on examinations, programming exercises, and a project. (Formerly CMPS 162.)",
      "instructor": ["Alex Pang", "James Davis"],
      "requirements": { "prereq": ["CSE 160", "CSE 162L"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 162L",
      "name": " Advanced Computer Graphics and Animation Laboratory",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-162L",
      "credits": "2",
      "description": "Complements CSE&nbsp;162. Students gain additional competence in a hands-on computational laboratory setting. Representative examples include topics, such as interactive curve and surface design; shaders for advanced effects; crowd and behavioral animation; experiments with particle systems; facial animation; and motion and planning. (Formerly CMPS 162L.)",
      "instructor": ["Alex Pang", "James Davis"],
      "requirements": { "prereq": ["CSE 162"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 163",
      "name": " Data Programming for Visualization",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-163",
      "credits": "5",
      "description": "Presents the basics of open-source programming tools to perform data analysis and create interactive visualizations and maps for the web, data integrity and scraping, statistical computation, simple and novel visualizations, and geomapping. The examples are drawn from social science, public policy, and data journalism. (Formerly CMPS 165.)",
      "instructor": ["Suresh Lodha"],
      "requirements": { "prereq": ["CSE 101"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 164",
      "name": " Computer Vision",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-164",
      "credits": "5",
      "description": "Introduces both the basic computer vision concepts and the advanced deep learning methods for computer vision. Topics include fundamentals of image formation, camera imaging geometry, early-/mid-/high-level vision, basics of machine learning and convolutional neural networks for vision.\n",
      "instructor": ["Cihang Xie"],
      "requirements": { "prereq": ["CSE 144"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 165",
      "name": " Human-Computer Interaction",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-165",
      "credits": "5",
      "description": "Theory and hands-on practice to understand what makes user interfaces usable and accessible to diverse individuals. Covers human senses and memory and their design implications, requirement solicitation, user-centered design and prototyping techniques, and expert and user evaluations. Interdisciplinary course for social science and engineering majors. Students cannot receive credit for this course and <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Graduate/CSE-265'>CSE 265</a> or DANM 231. (Formerly Computer Engineering 131.)",
      "instructor": [],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 167",
      "name": " Mobile Sensing and Interaction",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-167",
      "credits": "5",
      "description": "Provides hands-on knowledge and experience with modern mobile computing platforms for sensing and interactions tasks. Students learn how to create usable applications on a sensor-laden, mobile computing platform with adequate level of user interface.",
      "instructor": ["Roberto Manduchi"],
      "requirements": {
        "prereq": [
          "CSE 13S",
          "ECE 13",
          "PHYS 5A",
          "PHYS 6A",
          "AM 10",
          "MATH 21"
        ],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 168",
      "name": " Introduction to Augmented Reality and Virtual Reality",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-168",
      "credits": "7",
      "description": "Covers the concepts and methods needed to develop augmented reality (AR) and virtual reality (VR) applications. Topics include 3D modeling, graphics rendering, image compositing, occlusion handling, sensors, computer vision and image analysis, toolkits for AR, different display options, dynamics, interaction, and navigation. Prerequisite(s): <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-160'>CSE 160</a> and CSE 160L. Some knowledge of mobile platforms (e.g., <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-118'>CSE 118</a> or <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-167'>CSE 167</a>) is helpful, but not required. Enrollment is by instructor permission. Enrollment is restricted to juniors and seniors. (Formerly CMPS 168.)",
      "instructor": ["Alex Pang", "James Davis</p>\r\n\t</div"],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 180",
      "name": " Database Systems I",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-180",
      "credits": "5",
      "description": "Introduction to the concepts, approaches, tools, and methodology of database design. Covers the entity-relationship model, the relational model, relational algebra, relational calculus, commercial languages (such as SQL and QBE), functional dependencies, normal forms, and design theory. Other topics may include knowledge-bases, constraint databases, and alternative database models. Students that have taken and passed <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-182'>CSE 182</a> may not take <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-180'>CSE 180</a> for credit. (Formerly CMPS 180.)\n",
      "instructor": [" The Staff", "Sheldon Finkelstein"],
      "requirements": { "prereq": ["CSE 101"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 181",
      "name": " Database Systems II",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-181",
      "credits": "5",
      "description": "Introduction to the architecture and implementation of database systems. Topics covered include data storage, tree and hash indexes, storage management, query evaluation and optimization, transaction management, concurrency control, recovery, and XML data management. (Formerly CMPS 181.)",
      "instructor": [" The Staff", "Sheldon Finkelstein"],
      "requirements": { "prereq": ["CSE 180"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 182",
      "name": " Introduction to Database Management Systems",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-182",
      "credits": "5",
      "description": "Concepts, approaches, tools, and methodology of database design. Topics include the entity-relationship model; the relational data model; normal forms; commercial languages such as SQL (SQL constraints, SQL triggers, and update languages); query-by-example (QBE); XML data model, and XML query language (XQuery); as well as relational database-management support for XML and object-relational features in database-management systems. Involves a database -application development project. Students that have taken and passed <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-180'>CSE 180</a> cannot receive credit for <a class='sc-courselink' href='/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-182'>CSE 182</a>.",
      "instructor": ["Sheldon Finkelstein"],
      "requirements": {
        "prereq": ["CSE 13S", "ECE 13", "CSE 180"],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 183",
      "name": " Web Applications",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-183",
      "credits": "5",
      "description": "The World-Wde Web is one of the main mechanisms by which computer applications are delivered to users. This course introduces the design of Web applications.  Students learn the main technologies involved, and build web applications as part of homework assignments and group class projects.(Formerly CMPS 183.)",
      "instructor": [
        " The Staff",
        "Jim Whitehead",
        "Luca De Alfaro",
        "Richard Jullig",
        "David Harrison"
      ],
      "requirements": { "prereq": ["CMPM 35", "CSE 101"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 184",
      "name": " Data Wrangling and Web Scraping",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-184",
      "credits": "5",
      "description": "Python basics; data extraction from CSV, JSON, XML, Excel, PDF, encoded text files; data cleaning, finding duplicates, missing data, fuzzy matching; data exploration, joining, aggregating, separating, correlation, clustering; web scraping, APIs, scraping data from social media, open data network. (Formerly CMPS 184.)",
      "instructor": ["Suresh Lodha"],
      "requirements": { "prereq": ["CSE 101"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 185E",
      "name": " Technical Writing for Computer Science and Engineering",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-185E",
      "credits": "5",
      "description": "Writing by engineers and computer scientists to technical audiences. Writing exercises include: cover letter and resume for job application, tutorial writing, grant proposal, document specification, literature review, and a final technical report. Two oral presentations are also required, an in-class presentation and a poster presentation. Students also receive instruction in the use of UC library and journal database resources, and in the writing of a statement of purpose for graduate school application. Also offered as CSE 185S. (Formerly Computer Engineering 185, Technical Writing for Computer Engineers.)\n",
      "instructor": ["Gerald Moulds"],
      "requirements": {
        "prereq": ["CSE 101", "CSE 12", "CSE 30", "BME 160"],
        "coreq": []
      },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 186",
      "name": " Full Stack Web Development I",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-186",
      "credits": "5",
      "description": "Examines current uses of the World Wide Web for delivery of the sophisticated interactive applications used daily. Web applications offer several advantages over traditional, locally installable binaries including heterogeneous deployment, instantaneous access, continuous updates, and the possibility of collaboration at scale. These full stack web applications are typically more complex than their traditional counterparts, requiring the seamless integrating of numerous related technologies if end users are to have a productive experience and the system is to remain robust, performant, and secure.\n",
      "instructor": ["David Harrison"],
      "requirements": { "prereq": ["CSE 30", "CSE 101"], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": false,
        "summer": true
      }
    },
    {
      "id": "CSE 191",
      "name": " Computer Science and Technology Seminar",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-191",
      "credits": "2",
      "description": "Weekly talks by industry experts, university researchers, field practitioners, and video presentations provide an in-depth exposure to a specific or a broad area of computer science and technology. Topics include emerging ideas, opportunities, challenges, and future of the industry. (Formerly CMPS 191.)",
      "instructor": [
        " The Staff",
        "Suresh Lodha",
        "James Davis",
        "Marilyn Walker"
      ],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 192",
      "name": " Supervised Student Teaching/Tutoring",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-192",
      "credits": "5",
      "description": "Students hold tutoring hours, run a lab, or lead discussion section in conjunction with a regularly offered course and under close supervision by the course's instructor. Weekly meetings with a regular faculty member to discuss teaching techniques, pedagogy, sensitivity to students' needs, maintaining a comfortable learning environment, and strategies for handling difficult situations. Students submit a report on their teaching experience. Enrollment by permission of instructor and restricted to sophomores, juniors, and seniors. (Formerly CMPS 192.)",
      "instructor": ["David Helmbold</p>\r\n\t</div"],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 192F",
      "name": " Supervised Student Teaching/Tutoring",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-192F",
      "credits": "2",
      "description": "Students hold tutoring hours, run a lab, or lead discussion section in conjunction with a regularly offered course and under close supervision by the course's instructor. Weekly meetings with a regular faculty member to discuss teaching techniques, pedagogy, sensitivity to students' needs, maintaining a comfortable learning environment, and strategies for handling difficult situations. Students submit a report on their teaching experience. Enrollment by permission of instructor and restricted to sophomores, juniors, and seniors. (Formerly CMPS 192F.)",
      "instructor": ["David Helmbold</p>\r\n\t</div"],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": false,
        "winter": false,
        "spring": false,
        "summer": false
      }
    },
    {
      "id": "CSE 193",
      "name": " Field Study",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-193",
      "credits": "5",
      "description": "Provides for individual programs of study with specific academic objectives carried out under the direction of a faculty member of the Computer Engineering Department and a willing sponsor at the field site using resources not normally available on campus. Credit is based on the presentation of evidence of achieving the objectives by submitting a written and oral presentation. May not be repeated for credit. Students submit petition to sponsoring agency.",
      "instructor": [],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 193F",
      "name": " Field Study",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-193F",
      "credits": "2",
      "description": "Provides for individual programs of study with specific academic objectives carried out under the direction of a faculty member of the Computer Engineering Department and a willing sponsor at the field site using resources not normally available on campus. Credit is based on the presentation of evidence of achieving the objectives by submitting a written and oral presentation. May not be repeated for credit. Students submit petition to sponsoring agency.",
      "instructor": [],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    },
    {
      "id": "CSE 194",
      "name": " Group Tutorial",
      "link": "https://catalog.ucsc.edu/en/current/General-Catalog/Courses/CSE-Computer-Science-and-Engineering/Upper-Division/CSE-194",
      "credits": "5",
      "description": "A program of independent study arranged between a group of students and a faculty member. Students submit petition to sponsoring agency.",
      "instructor": [],
      "requirements": { "prereq": [], "coreq": [] },
      "ge_code": "",
      "quarter_offered": {
        "fall": true,
        "winter": true,
        "spring": true,
        "summer": false
      }
    }
  ]
}
